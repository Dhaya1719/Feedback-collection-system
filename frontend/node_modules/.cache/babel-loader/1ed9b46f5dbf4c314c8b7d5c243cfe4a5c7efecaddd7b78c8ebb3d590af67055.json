{"ast":null,"code":"import _objectSpread from\"E:/murugesan/Downloads/nm pro/Feedback-collection-system/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function FeedbackForm(){const{formId}=useParams();const[form,setForm]=useState(null);const[formData,setFormData]=useState({});const[submitted,setSubmitted]=useState(false);const[loading,setLoading]=useState(true);useEffect(()=>{// Fetch the specific form structure from the backend\naxios.get(\"http://localhost:5000/api/forms/\".concat(formId)).then(response=>{setForm(response.data);setLoading(false);}).catch(error=>{console.error(\"Error fetching form:\",error);setLoading(false);});},[formId]);const handleChange=e=>{const{name,value,type,checked}=e.target;setFormData(prevData=>{// Handle Checkboxes (multiple selections)\nif(type==='checkbox'){const currentArray=prevData[name]||[];return _objectSpread(_objectSpread({},prevData),{},{[name]:checked?[...currentArray,value]// Add value if checked\n:currentArray.filter(v=>v!==value)// Remove value if unchecked\n});}// Handle Text, Radio, Email, Name (single value inputs)\nreturn _objectSpread(_objectSpread({},prevData),{},{[name]:value});});};const handleSubmit=async e=>{e.preventDefault();// Structure submission data for the backend API\ntry{await axios.post(\"http://localhost:5000/api/submissions/\".concat(formId),_objectSpread({// Name and Email are sent at the top level\nname:formData.name,email:formData.email},Object.keys(formData).reduce((acc,key)=>{// Filter out the 'name' and 'email' keys\nif(key!=='name'&&key!=='email'){acc[key]=formData[key];}return acc;},{})));setSubmitted(true);}catch(error){console.error(\"Error submitting form:\",error);alert('Submission failed. Please try again.');}};if(loading)return/*#__PURE__*/_jsx(\"div\",{className:\"container text-center\",children:\"Loading form...\"});if(!form)return/*#__PURE__*/_jsx(\"div\",{className:\"container text-center\",children:\"Form not found.\"});if(submitted)return/*#__PURE__*/_jsxs(\"div\",{className:\"container text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Thank you for your feedback!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Your response has been recorded.\"})]});return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:form.title}),/*#__PURE__*/_jsx(\"p\",{children:form.description}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"feedback-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Name (Optional)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email (Optional)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",onChange:handleChange})]}),form.questions.map(q=>{// Use the question's MongoDB _id as the unique key for form data tracking\nconst questionKey=q._id.toString();return/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:q.questionText}),q.questionType==='text'&&/*#__PURE__*/_jsx(\"textarea\",{name:questionKey,onChange:handleChange,required:true}),q.questionType==='rating'&&/*#__PURE__*/_jsx(\"div\",{className:\"options rating-input\",children:[1,2,3,4,5].map(star=>/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:questionKey,value:star,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"span\",{children:star})]},star))}),(q.questionType==='radio'||q.questionType==='checkbox')&&/*#__PURE__*/_jsx(\"div\",{className:\"options\",children:q.options.map((option,optIndex)=>/*#__PURE__*/_jsxs(\"label\",{className:q.questionType,children:[/*#__PURE__*/_jsx(\"input\",{type:q.questionType,name:questionKey,value:option,onChange:handleChange,required:q.questionType==='radio'// Radio buttons are typically required\n}),/*#__PURE__*/_jsx(\"span\",{children:option})]},optIndex))})]},questionKey);}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"Submit Feedback\"})]})]});}export default FeedbackForm;","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsx","_jsx","jsxs","_jsxs","FeedbackForm","formId","form","setForm","formData","setFormData","submitted","setSubmitted","loading","setLoading","get","concat","then","response","data","catch","error","console","handleChange","e","name","value","type","checked","target","prevData","currentArray","_objectSpread","filter","v","handleSubmit","preventDefault","post","email","Object","keys","reduce","acc","key","alert","className","children","title","description","onSubmit","onChange","questions","map","q","questionKey","_id","toString","questionText","questionType","required","star","options","option","optIndex"],"sources":["E:/murugesan/Downloads/nm pro/Feedback-collection-system/frontend/src/components/FeedbackForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction FeedbackForm() {\r\n  const { formId } = useParams();\r\n  const [form, setForm] = useState(null);\r\n  const [formData, setFormData] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Fetch the specific form structure from the backend\r\n    axios.get(`http://localhost:5000/api/forms/${formId}`)\r\n      .then(response => {\r\n        setForm(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching form:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, [formId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    \r\n    setFormData(prevData => {\r\n      // Handle Checkboxes (multiple selections)\r\n      if (type === 'checkbox') {\r\n        const currentArray = prevData[name] || [];\r\n        return {\r\n          ...prevData,\r\n          [name]: checked \r\n            ? [...currentArray, value] // Add value if checked\r\n            : currentArray.filter(v => v !== value) // Remove value if unchecked\r\n        };\r\n      }\r\n      \r\n      // Handle Text, Radio, Email, Name (single value inputs)\r\n      return { ...prevData, [name]: value };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Structure submission data for the backend API\r\n    try {\r\n      await axios.post(`http://localhost:5000/api/submissions/${formId}`, {\r\n          // Name and Email are sent at the top level\r\n          name: formData.name,\r\n          email: formData.email,\r\n          // All other responses are mapped by question ID\r\n          ...Object.keys(formData).reduce((acc, key) => {\r\n            // Filter out the 'name' and 'email' keys\r\n            if (key !== 'name' && key !== 'email') {\r\n              acc[key] = formData[key];\r\n            }\r\n            return acc;\r\n          }, {})\r\n      });\r\n      setSubmitted(true);\r\n    } catch (error) {\r\n      console.error(\"Error submitting form:\", error);\r\n      alert('Submission failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"container text-center\">Loading form...</div>;\r\n  if (!form) return <div className=\"container text-center\">Form not found.</div>;\r\n  if (submitted) return <div className=\"container text-center\"><h2>Thank you for your feedback!</h2><p>Your response has been recorded.</p></div>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>{form.title}</h2>\r\n      <p>{form.description}</p>\r\n      <form onSubmit={handleSubmit} className=\"feedback-form\">\r\n        \r\n        {/* Universal fields: Name and Email (uses fixed keys) */}\r\n        <div className=\"form-group\">\r\n          <label>Name (Optional)</label>\r\n          <input type=\"text\" name=\"name\" onChange={handleChange} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Email (Optional)</label>\r\n          <input type=\"email\" name=\"email\" onChange={handleChange} />\r\n        </div>\r\n\r\n        {/* Dynamic Questions Rendering */}\r\n        {form.questions.map((q) => {\r\n          // Use the question's MongoDB _id as the unique key for form data tracking\r\n          const questionKey = q._id.toString(); \r\n          return (\r\n            <div key={questionKey} className=\"form-group\">\r\n              <label>{q.questionText}</label>\r\n              \r\n              {/* Text Input */}\r\n              {q.questionType === 'text' && (\r\n                <textarea name={questionKey} onChange={handleChange} required />\r\n              )}\r\n              \r\n              {/* Rating (Radio 1-5) */}\r\n              {q.questionType === 'rating' && (\r\n                <div className=\"options rating-input\">\r\n                  {[1, 2, 3, 4, 5].map(star => (\r\n                    <label key={star}>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name={questionKey}\r\n                        value={star}\r\n                        onChange={handleChange}\r\n                        required\r\n                      /> \r\n                      {/* Using a span allows styling the text when the input is checked */}\r\n                      <span>{star}</span>\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              )}\r\n              \r\n              {/* Radio (Multiple Choice) & Checkbox */}\r\n              {(q.questionType === 'radio' || q.questionType === 'checkbox') && (\r\n                <div className=\"options\">\r\n                  {q.options.map((option, optIndex) => (\r\n                    <label key={optIndex} className={q.questionType}>\r\n                      <input\r\n                        type={q.questionType}\r\n                        name={questionKey}\r\n                        value={option}\r\n                        onChange={handleChange}\r\n                        required={q.questionType === 'radio'} // Radio buttons are typically required\r\n                      /> \r\n                      {/* Using a span allows styling the text when the input is checked */}\r\n                      <span>{option}</span>\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n        <button type=\"submit\" className=\"btn btn-primary\">Submit Feedback</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeedbackForm;"],"mappings":"sJAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,YAAYA,CAAA,CAAG,CACtB,KAAM,CAAEC,MAAO,CAAC,CAAGP,SAAS,CAAC,CAAC,CAC9B,KAAM,CAACQ,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC5C,KAAM,CAACc,SAAS,CAAEC,YAAY,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACgB,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd;AACAE,KAAK,CAACe,GAAG,oCAAAC,MAAA,CAAoCV,MAAM,CAAE,CAAC,CACnDW,IAAI,CAACC,QAAQ,EAAI,CAChBV,OAAO,CAACU,QAAQ,CAACC,IAAI,CAAC,CACtBL,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,EAAI,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5CP,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CACN,CAAC,CAAE,CAACR,MAAM,CAAC,CAAC,CAEZ,KAAM,CAAAiB,YAAY,CAAIC,CAAC,EAAK,CAC1B,KAAM,CAAEC,IAAI,CAAEC,KAAK,CAAEC,IAAI,CAAEC,OAAQ,CAAC,CAAGJ,CAAC,CAACK,MAAM,CAE/CnB,WAAW,CAACoB,QAAQ,EAAI,CACtB;AACA,GAAIH,IAAI,GAAK,UAAU,CAAE,CACvB,KAAM,CAAAI,YAAY,CAAGD,QAAQ,CAACL,IAAI,CAAC,EAAI,EAAE,CACzC,OAAAO,aAAA,CAAAA,aAAA,IACKF,QAAQ,MACX,CAACL,IAAI,EAAGG,OAAO,CACX,CAAC,GAAGG,YAAY,CAAEL,KAAK,CAAE;AAAA,CACzBK,YAAY,CAACE,MAAM,CAACC,CAAC,EAAIA,CAAC,GAAKR,KAAK,CAAE;AAAA,GAE9C,CAEA;AACA,OAAAM,aAAA,CAAAA,aAAA,IAAYF,QAAQ,MAAE,CAACL,IAAI,EAAGC,KAAK,GACrC,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAS,YAAY,CAAG,KAAO,CAAAX,CAAC,EAAK,CAChCA,CAAC,CAACY,cAAc,CAAC,CAAC,CAElB;AACA,GAAI,CACF,KAAM,CAAApC,KAAK,CAACqC,IAAI,0CAAArB,MAAA,CAA0CV,MAAM,EAAA0B,aAAA,EAC5D;AACAP,IAAI,CAAEhB,QAAQ,CAACgB,IAAI,CACnBa,KAAK,CAAE7B,QAAQ,CAAC6B,KAAK,EAElBC,MAAM,CAACC,IAAI,CAAC/B,QAAQ,CAAC,CAACgC,MAAM,CAAC,CAACC,GAAG,CAAEC,GAAG,GAAK,CAC5C;AACA,GAAIA,GAAG,GAAK,MAAM,EAAIA,GAAG,GAAK,OAAO,CAAE,CACrCD,GAAG,CAACC,GAAG,CAAC,CAAGlC,QAAQ,CAACkC,GAAG,CAAC,CAC1B,CACA,MAAO,CAAAD,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CACT,CAAC,CACF9B,YAAY,CAAC,IAAI,CAAC,CACpB,CAAE,MAAOS,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9CuB,KAAK,CAAC,sCAAsC,CAAC,CAC/C,CACF,CAAC,CAED,GAAI/B,OAAO,CAAE,mBAAOX,IAAA,QAAK2C,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,iBAAe,CAAK,CAAC,CAChF,GAAI,CAACvC,IAAI,CAAE,mBAAOL,IAAA,QAAK2C,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,iBAAe,CAAK,CAAC,CAC9E,GAAInC,SAAS,CAAE,mBAAOP,KAAA,QAAKyC,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eAAC5C,IAAA,OAAA4C,QAAA,CAAI,8BAA4B,CAAI,CAAC,cAAA5C,IAAA,MAAA4C,QAAA,CAAG,kCAAgC,CAAG,CAAC,EAAK,CAAC,CAE/I,mBACE1C,KAAA,QAAKyC,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB5C,IAAA,OAAA4C,QAAA,CAAKvC,IAAI,CAACwC,KAAK,CAAK,CAAC,cACrB7C,IAAA,MAAA4C,QAAA,CAAIvC,IAAI,CAACyC,WAAW,CAAI,CAAC,cACzB5C,KAAA,SAAM6C,QAAQ,CAAEd,YAAa,CAACU,SAAS,CAAC,eAAe,CAAAC,QAAA,eAGrD1C,KAAA,QAAKyC,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB5C,IAAA,UAAA4C,QAAA,CAAO,iBAAe,CAAO,CAAC,cAC9B5C,IAAA,UAAOyB,IAAI,CAAC,MAAM,CAACF,IAAI,CAAC,MAAM,CAACyB,QAAQ,CAAE3B,YAAa,CAAE,CAAC,EACtD,CAAC,cACNnB,KAAA,QAAKyC,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB5C,IAAA,UAAA4C,QAAA,CAAO,kBAAgB,CAAO,CAAC,cAC/B5C,IAAA,UAAOyB,IAAI,CAAC,OAAO,CAACF,IAAI,CAAC,OAAO,CAACyB,QAAQ,CAAE3B,YAAa,CAAE,CAAC,EACxD,CAAC,CAGLhB,IAAI,CAAC4C,SAAS,CAACC,GAAG,CAAEC,CAAC,EAAK,CACzB;AACA,KAAM,CAAAC,WAAW,CAAGD,CAAC,CAACE,GAAG,CAACC,QAAQ,CAAC,CAAC,CACpC,mBACEpD,KAAA,QAAuByC,SAAS,CAAC,YAAY,CAAAC,QAAA,eAC3C5C,IAAA,UAAA4C,QAAA,CAAQO,CAAC,CAACI,YAAY,CAAQ,CAAC,CAG9BJ,CAAC,CAACK,YAAY,GAAK,MAAM,eACxBxD,IAAA,aAAUuB,IAAI,CAAE6B,WAAY,CAACJ,QAAQ,CAAE3B,YAAa,CAACoC,QAAQ,MAAE,CAChE,CAGAN,CAAC,CAACK,YAAY,GAAK,QAAQ,eAC1BxD,IAAA,QAAK2C,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAClC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAACM,GAAG,CAACQ,IAAI,eACvBxD,KAAA,UAAA0C,QAAA,eACE5C,IAAA,UACEyB,IAAI,CAAC,OAAO,CACZF,IAAI,CAAE6B,WAAY,CAClB5B,KAAK,CAAEkC,IAAK,CACZV,QAAQ,CAAE3B,YAAa,CACvBoC,QAAQ,MACT,CAAC,cAEFzD,IAAA,SAAA4C,QAAA,CAAOc,IAAI,CAAO,CAAC,GATTA,IAUL,CACR,CAAC,CACC,CACN,CAGA,CAACP,CAAC,CAACK,YAAY,GAAK,OAAO,EAAIL,CAAC,CAACK,YAAY,GAAK,UAAU,gBAC3DxD,IAAA,QAAK2C,SAAS,CAAC,SAAS,CAAAC,QAAA,CACrBO,CAAC,CAACQ,OAAO,CAACT,GAAG,CAAC,CAACU,MAAM,CAAEC,QAAQ,gBAC9B3D,KAAA,UAAsByC,SAAS,CAAEQ,CAAC,CAACK,YAAa,CAAAZ,QAAA,eAC9C5C,IAAA,UACEyB,IAAI,CAAE0B,CAAC,CAACK,YAAa,CACrBjC,IAAI,CAAE6B,WAAY,CAClB5B,KAAK,CAAEoC,MAAO,CACdZ,QAAQ,CAAE3B,YAAa,CACvBoC,QAAQ,CAAEN,CAAC,CAACK,YAAY,GAAK,OAAS;AAAA,CACvC,CAAC,cAEFxD,IAAA,SAAA4C,QAAA,CAAOgB,MAAM,CAAO,CAAC,GATXC,QAUL,CACR,CAAC,CACC,CACN,GA5COT,WA6CL,CAAC,CAEV,CAAC,CAAC,cACFpD,IAAA,WAAQyB,IAAI,CAAC,QAAQ,CAACkB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,iBAAe,CAAQ,CAAC,EACtE,CAAC,EACJ,CAAC,CAEV,CAEA,cAAe,CAAAzC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}